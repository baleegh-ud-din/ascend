name: CI Checks

on:
  pull_request:  # Runs on all pull requests

jobs:
  version-check:
    name: Check Makefile Version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Check Makefile Version and Compare
        run: |
          set -e

          # Ensure VERSION exists in Makefile
          if ! grep -q "VERSION := " Makefile; then
            echo "‚ùå Makefile VERSION not found!"
            exit 1
          fi

          # Extract current version from the last tagged release
          CURRENT_VERSION=$(git fetch --tags > /dev/null 2>&1 && git describe --tags --abbrev=0 2>/dev/null || echo "0.0.0")
          NEW_VERSION=$(grep "VERSION :=" Makefile | cut -d' ' -f3)

          echo "üîπ Current Version: $CURRENT_VERSION"
          echo "üîπ New Version: $NEW_VERSION"

          # Convert versions to comparable numbers
          parse_version() {
            echo "$1" | awk -F. '{ printf("%d%03d%03d\n", $1, $2, $3); }'
          }

          CUR_VER_NUM=$(parse_version "$CURRENT_VERSION")
          NEW_VER_NUM=$(parse_version "$NEW_VERSION")

          # Compare versions
          if [ "$NEW_VER_NUM" -le "$CUR_VER_NUM" ]; then
            echo "‚ùå New VERSION ($NEW_VERSION) must be greater than the current VERSION ($CURRENT_VERSION)!"
            exit 1
          fi

          echo "‚úÖ New VERSION ($NEW_VERSION) is valid and greater than the current VERSION ($CURRENT_VERSION)."

  build-check:
    name: Run Make Build
    runs-on: ubuntu-latest
    needs: version-check  # Ensures version check runs first
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'  # Adjust as needed

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '23.7.0'  # Adjust as needed
          cache: 'pnpm'

      - name: Run Make Build
        run: make build
